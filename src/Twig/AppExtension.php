<?php

namespace App\Twig;

use App\Entity\Brand;
use App\Entity\ChildService;
use App\Entity\Model;
use App\Entity\Service;
use App\Entity\SubService;
use Twig\Extension\AbstractExtension;
use Twig\TwigFunction;

class AppExtension extends AbstractExtension
{
    public function getFunctions(): array
    {
        return [
            new TwigFunction('ucfirst', [$this, 'ucfirst']),
            new TwigFunction('get_utp', [$this, 'get_utp']),
            new TwigFunction('price_calc', [$this, 'priceCalculation']),
            new TwigFunction('is_simple_page', [$this, 'is_simple_page']),
            new TwigFunction('get_description_simple_page', [$this, 'get_description_simple_page']),
            new TwigFunction('get_title_simple_page', [$this, 'get_title_simple_page']),
            new TwigFunction('get_title_basic_site', [$this, 'get_title_basic_site']),
            new TwigFunction('get_title_brand_page', [$this, 'get_title_brand_page']),
            new TwigFunction('get_title_model_page', [$this, 'get_title_model_page']),
            new TwigFunction('get_description_special_site', [$this, 'get_description_special_site']),
            new TwigFunction('get_description_basic_site', [$this, 'get_description_basic_site']),
            new TwigFunction('get_description_brand_page', [$this, 'get_description_brand_page']),
            new TwigFunction('get_description_model_page', [$this, 'get_description_model_page']),
            new TwigFunction('is_service_from_domain_special_site', [$this, 'is_service_from_domain_special_site']),
            new TwigFunction('get_title_h1', [$this, 'get_title_h1']),
            new TwigFunction('get_domain_zone', [$this, 'get_domain_zone']),
            new TwigFunction('get_all_services', [ServiceRuntime::class, 'get_all_services']),
            new TwigFunction('get_all_promo', [PromoRuntime::class, 'get_all_promo']),
            new TwigFunction('get_files_for_gallery', [$this, 'get_files_for_gallery']),
            new TwigFunction('get_current_service', [ServiceRuntime::class, 'get_current_service']),
            new TwigFunction('get_services_for_price_list', [ServiceRuntime::class, 'get_services_for_price_list']),
            new TwigFunction('get_service', [ServiceRuntime::class, 'get_service']),
            new TwigFunction('under_price_text', [$this, 'under_price_text']),
        ];
    }

    public function under_price_text(string $serviceSlug): string
    {
        return match ($serviceSlug) {
            'remont-rulevyh-reek' => 'üí∞ –í—ã–≥–æ–¥–Ω–æ –≤—ã–∫—É–ø–∏–º –≤–∞—à—É –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω—É—é —Ä—É–ª–µ–≤—É—é —Ä–µ–π–∫—É –∏ —Å–¥–µ–ª–∞–µ–º —Å–∫–∏–¥–∫—É –Ω–∞ –∑–∞–º–µ–Ω—É –Ω–æ–≤–æ–π.',
            'remont-turbiny' => 'üí∞ –í—ã–≥–æ–¥–Ω–æ –≤—ã–∫—É–ø–∏–º –≤–∞—à—É –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω—É—é —Ç—É—Ä–±–∏–Ω—É –∏ —Å–¥–µ–ª–∞–µ–º —Å–∫–∏–¥–∫—É –Ω–∞ –∑–∞–º–µ–Ω—É –Ω–æ–≤–æ–π.',
            default => '',
        };
    }

    /**
     * –ü–æ–¥—Å—á–µ—Ç —Ä–∞–±–æ—Ç—ã –Ω–æ—Ä–º–∞ —á–∞—Å–∞
     */
    public function priceCalculation(float $hours): float
    {
        return 1500 * $hours;
    }

    /**
     * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
     */
    public function ucfirst(string $string): string
    {
        $fc = mb_strtoupper(mb_substr($string, 0, 1));
        return $fc . mb_substr($string, 1);
    }

    /**
     * –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç –¥–ª—è —É—Å–ª—É–≥ –∏ –¥–æ—á–µ—Ä–Ω–∏—Ö —É—Å–ª—É–≥
     */
    public function get_files_for_gallery(): bool|array
    {
        $dir = getcwd() . '/img/our_works';

        $files = array_diff(scandir($dir), array('..', '.'));

        $f = [];
        foreach ($files as $k => $file) {
            $f[$k] = 'img/our_works' . '/' . $file;
        }

        return $f;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –£–¢–ü
     */
    public function get_utp(string $name = ''): array
    {
        return [
            'utp1' => '–ß–µ—Å—Ç–Ω–æ —Å—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å ' . $name,
            'utp2' => '–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Ä–µ–º–æ–Ω—Ç 1 –≥–æ–¥ ' . $name,
            'utp3' => '–ó–∞–ø—á–∞—Å—Ç–∏ –≤ –Ω–∞–ª–∏—á–∏–∏',
        ];
    }


    /**
     * –ü–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç–∏—á–Ω–æ–π
     */
    public function is_simple_page(string $page_name): bool
    {
        return match ($page_name) {
            '/services/', '/price_list/', '/promo/', '/contacts/' => true,
            default => false,
        };
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ description –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    public function get_description_simple_page(string $page, ?Service $service): string
    {
        $serviceName = $this->get_service_name($service);

        return match ($page) {
            '/services/' => "–£—Å–ª—É–≥–∏ –Ω–∞ " . mb_strtolower($serviceName) . ". –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç.",
            '/price_list/' => '–ü—Ä–∞–π—Å –ª–∏—Å—Ç –Ω–∞ ' . mb_strtolower($serviceName) . '. –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç',
            '/contacts/' => '–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ —Å—Ö–µ–º–∞ –ø—Ä–æ–µ–∑–¥–∞. –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç –ø–æ ' . str_replace('—Ä–µ–º–æ–Ω—Ç', '—Ä–µ–º–æ–Ω—Ç—É', mb_strtolower($serviceName)),
            '/promo/' => '–ê–∫—Ü–∏–∏ –Ω–∞ ' . mb_strtolower($serviceName) . '. –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç.'
        };
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ title –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    public function get_title_simple_page(string $page, ?Service $service_from_domain): string
    {
        $serviceName = $this->get_service_name($service_from_domain);

        return match ($page) {
            '/services/' => "–ù–∞—à–∏ —É—Å–ª—É–≥–∏  - –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç –ø–æ " . str_replace('—Ä–µ–º–æ–Ω—Ç', '—Ä–µ–º–æ–Ω—Ç—É', mb_strtolower($serviceName)),
            '/price_list/' => "–ü—Ä–∞–π—Å –ª–∏—Å—Ç - –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç –ø–æ " . str_replace('—Ä–µ–º–æ–Ω—Ç', '—Ä–µ–º–æ–Ω—Ç—É', mb_strtolower($serviceName)),
            '/contacts/' => "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã - –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç –ø–æ " . str_replace('—Ä–µ–º–æ–Ω—Ç', '—Ä–µ–º–æ–Ω—Ç—É', mb_strtolower($serviceName)),
            '/promo/' => "–ù–∞—à–∏ –∞–∫—Ü–∏–∏ - –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ú–æ—Ç–æ—Ä–∏—Å—Ç –ø–æ " . str_replace('—Ä–µ–º–æ–Ω—Ç', '—Ä–µ–º–æ–Ω—Ç—É', mb_strtolower($serviceName)),
        };

    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ description —É—Å–ª—É–≥ –∏ –¥–æ—á–µ—Ä–Ω–∏—Ö —É—Å–ª—É–≥ –±–∞–∑–æ–≤—ã—Ö —Å–∞–π—Ç–æ–≤
     */
    public function get_description_basic_site(): string
    {
        return "–†–µ–º–æ–Ω—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Ü–µ–Ω–∞. ‚≠ê –°–µ—Ä–≤–∏—Å –ê–ú –ü–ª—é—Å –≤ –ú–æ—Å–∫–≤–µ. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ö–æ–¥–æ–≤–æ–π. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∑–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤  ‚è© –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –≤ –í–ê–û –ú–æ—Å–∫–≤—ã.";
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ title —É—Å–ª—É–≥ –∏ –¥–æ—á–µ—Ä–Ω–∏—Ö —É—Å–ª—É–≥ –±–∞–∑–æ–≤—ã—Ö —Å–∞–π—Ç–æ–≤
     */
    public function get_title_basic_site(): string
    {
        return "–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ê–ú+ ‚Äî —Ä–µ–º–æ–Ω—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ú–æ—Å–∫–≤–µ. –í–ê–û. –ü—Ä–∞–π—Å –ª–∏—Å—Ç";
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ description –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –º–∞—Ä–æ–∫
     */
    public function get_description_brand_page(Service|SubService|ChildService|null $service, Brand $brand): string
    {
        $serviceName = $this->get_service_name($service);

        if (!$serviceName) {
            return '–†–µ–º–æ–Ω—Ç ' . $brand->getName() . ' —Ü–µ–Ω–∞. ‚≠ê –°–µ—Ä–≤–∏—Å ' . $brand->getRusName() . ' –ê–ú –ü–ª—é—Å –≤ –ú–æ—Å–∫–≤–µ. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ö–æ–¥–æ–≤–æ–π. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∑–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤  ‚è© –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å ' . preg_replace('/[(]|[)]/', '', $brand->getRusName()) . ' –≤ –í–ê–û –ú–æ—Å–∫–≤—ã.';
        } else {
            return $serviceName . ' ' . $brand->getName() . ' –≤ –ú–æ—Å–∫–≤–µ. ‚≠ê –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å ' . $brand->getRusName() . ' –ê–ú –ü–ª—é—Å. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–≤–µ—Å–∫–∏. ‚è© ' . $serviceName . ' ' . preg_replace('/[(]|[)]/', '', $brand->getRusName()) . ' —Ü–µ–Ω–∞.';
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ title –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –º–∞—Ä–æ–∫
     */
    public function get_title_brand_page(Service|SubService|ChildService|null $service, Brand $brand): string
    {
        $serviceName = $this->get_service_name($service) ?? "–†–µ–º–æ–Ω—Ç –∏ —Å–µ—Ä–≤–∏—Å";
        $name = $this->ucfirst($serviceName);

        return $name . ' ' . $brand->getName() . ' ' . $brand->getRusName() . ' –≤ –ú–æ—Å–∫–≤–µ | –ê–ú+';
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ description –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –º–æ–¥–µ–ª–µ–π
     */
    public function get_description_model_page(Service|SubService|ChildService|null $service, Model $model): string
    {
        $serviceName = $this->get_service_name($service);
        if (!$serviceName) {
            return '–†–µ–º–æ–Ω—Ç ' . $model->getBrand()->getName() . ' ' . $model->getName() . ' —Ü–µ–Ω–∞ –≤ –ú–æ—Å–∫–≤–µ. ‚≠ê –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å ' . $model->getRusName() . ' –ê–ú –ü–ª—é—Å. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–≤–µ—Å–∫–∏. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∑–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤  ‚è© –°–µ—Ä–≤–∏—Å ' . preg_replace('/[(]|[)]/', '', $model->getRusName()) . ' –≤ –í–ê–û –ú–æ—Å–∫–≤—ã.';
        } else {
            return $serviceName . ' ' . $model->getBrand()->getName() . ' ' . $model->getName() . ' –≤ –ú–æ—Å–∫–≤–µ. ‚≠ê –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å ' . $model->getBrand()->getRusName() . ' –ê–ú –ü–ª—é—Å. ‚úîÔ∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–≤–µ—Å–∫–∏. ‚è© ' . $serviceName . ' ' . preg_replace('/[(]|[)]/', '', $model->getRusName()) . ' —Ü–µ–Ω–∞.';
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ title –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –º–æ–¥–µ–ª–µ–π
     */
    public function get_title_model_page(Service|SubService|ChildService|null $service, Model $model): string
    {
        $serviceName = $this->get_service_name($service) ?? "–†–µ–º–æ–Ω—Ç –∏ —Å–µ—Ä–≤–∏—Å";

        return $this->ucfirst($serviceName) . ' ' . $model->getBrand()->getName() . ' ' . $model->getName() . ' ' . $model->getRusName() . ' –ú–æ—Å–∫–≤–µ | –ê–ú+';
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ h1
     */
    public function get_title_h1(Service|SubService|ChildService|null $service, string $brand = '', string $model = ''): string
    {
        $serviceName = $this->get_service_name($service) ?? "–†–µ–º–æ–Ω—Ç –∏ —Å–µ—Ä–≤–∏—Å";

        if ($brand) {
            $str = $this->ucfirst($serviceName) . ' ' . $brand . ' –≤ –ú–æ—Å–∫–≤–µ';
        } elseif ($model) {
            $str = $this->ucfirst($serviceName) . ' ' . $model . ' –≤ –ú–æ—Å–∫–≤–µ';
        } else {
            $str = '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å ¬´–ê–ú+¬ª ‚Äî —Ä–µ–º–æ–Ω—Ç –∞–≤—Ç–æ –≤ –ú–æ—Å–∫–≤–µ';
        }
        return $str;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–º—è —É—Å–ª—É–≥–∏, –¥–æ—á–µ—Ä–Ω–µ–π —É—Å–ª—É–≥–∏
     */
    private function get_service_name(Service|SubService|ChildService|null $service): ?string
    {
        return $service?->getName();
    }
}